services:
  postgres_db:
    image: postgres:11
    restart: always
    ports:
      - "6000:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d mydb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  api:
    build:
      dockerfile: api/Dockerfile
      context: "./../"
    image: api:latest
    depends_on:
      postgres_db:
        condition: service_healthy
    ports:
      - "5000:5000"
    environment:
      DB_HOST: postgres_db
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_DATABASE: mydb
      DB_SCHEMA: public
      DB_PORT: 5432
      PORT: 5000
      LOG_LEVEL: info
      ALLOWED_ORIGINS: '["http://localhost:3000"]'
      NODE_ENV: production

  python-backend:
    build:
      context: ./../backend
      dockerfile: Dockerfile
    container_name: python-backend
    environment:
      PORT: 8000
      PYTHONPATH: /app
      DB_HOST: postgres_db
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_DATABASE: mydb
      DB_SCHEMA: public
      DB_PORT: 5432
      DATABASE_URL: "postgresql://postgres:password@postgres_db:5432/mydb"
      ALLOWED_ORIGINS: '["http://localhost:3000", "http://localhost:5173"]'
    ports:
      - "8300:8000"
    restart: unless-stopped
    depends_on:
      postgres_db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  react-web:
    build:
      context: ./../web
      dockerfile: Dockerfile
    container_name: web
    # depends_on:
    #   - backend
    volumes:
      - ./src:/app/src
    ports:
      - "3000:80"
    restart: unless-stopped

  # keycloak:
  #   image: quay.io/keycloak/keycloak:24.0.3
  #   command: start-dev
  #   environment:
  #     KEYCLOAK_ADMIN: admin
  #     KEYCLOAK_ADMIN_PASSWORD: admin
  #   ports:
  #     - "8080:8080"
  #   restart: unless-stopped
volumes:
  pgdata:
